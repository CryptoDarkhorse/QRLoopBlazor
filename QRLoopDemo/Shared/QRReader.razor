@using BlazorZXingJs

@inject IJSRuntime JsRunTime

<h3>QRReader</h3>

<MultiFormatReader
    VideoWidth="400"
    VideoHeight="400"
    OnBarcodeRead="BarcodeRead">

    <VideoForbidden>
        <h4>no permission for videodevice</h4>
    </VideoForbidden>

    <NoVideoDevices>
        <h4>no devices available</h4>
    </NoVideoDevices>
</MultiFormatReader>

<h4>Reading... @progress%</h4>
<p />
<pre>
@LocalBarcodeText
</pre>

@code {
    private string LocalBarcodeText;
    private Object frames = null;
    private double progress = 0;

    private String[] mockStr = {
        "AAAMAAAAAAVBNjFVyC5aWam6SoddOfemrEB1c2luZyBCbGF6b3JaWGluZ0pzCgpAaW5qZWN0IElKU1J1bnRpbWUgSnNSdW5UaW1lCgo8aDM+UVJHZW5lcmF0b3I8L2gzPgoKPGRpdiBjbGFzcz0icm93IG0tMSI+Cjx0ZXg=",
        "ZAAGAAoACAACAAsABwAACkVUJHB2Mb9FU2mmkDnFa2OD1ctsGlp1QXR3PX5lb00GMSoVU2gxBSsiGX5MIzUrfwUnDQQgQx9hdicVOTsNICEnUipcR0cZKnZoNTtHRElVTnAyaidGA2gUXT9UXXNgBi4CPQxvd3NOIGsISCt/NHdubTxhJSw8",
        "AAAMAAF0YXJlYSBAYmluZD0iQG1zZyIgc3R5bGU9ImhlaWdodDozMDBweCIgQG9uaW5wdXQ9IkAoKGUpID0+IHsgbXNnPShzdHJpbmcpZS5WYWx1ZTt9KSIgLz4KPC9kaXY+Cgo8ZGl2IGNsYXNzPSJyb3cgbS0xIj4KPGI=",
        "AAAMAAJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IiBAb25jbGljaz0iQEdlbmVyYXRlUVIiPkdlbmVyYXRlIFFSIENvZGU8L2J1dHRvbj4KPC9kaXY+Cgo8cD5Ub3RhbCBGcmFtZXM6IEBudW1GcmFtZXM8L3A+Cjw=",
        "AAAMAANRUkNvZGVXcml0ZXIgVGV4dD0iQEN1cnJlbnRGcmFtZSIgV2lkdGg9IjQwMCIgSGVpZ3RoPSI0MDAiPjwvUVJDb2RlV3JpdGVyPgoKQGZyYW1lc1N0cgoKQGNvZGUKewogICAgcHJpdmF0ZSBTdHJpbmcgbXNnID0=",
        "AAAMAAQgIiI7CiAgICBwcml2YXRlIFN0cmluZyBDdXJyZW50RnJhbWUgPSAiIjsKICAgIHByaXZhdGUgU3RyaW5nW10gZnJhbWVzOwogICAgcHJpdmF0ZSBpbnQgY3VyID0gMDsKICAgIHByaXZhdGUgU3lzdGVtLlRocmU=",
        "AAAMAAVhZGluZy5UaW1lcj8gdGltZXIgPSBudWxsOwogICAgcHJpdmF0ZSBpbnQgbnVtRnJhbWVzID0gMDsKCiAgICBwcml2YXRlIHN0cmluZyBmcmFtZXNTdHIgPSAiIjsKCiAgICBhc3luYyB2b2lkIEdlbmVyYXRlUVI=",
        "AAAMAAYoKQogICAgewogICAgICAgIGlmICh0aW1lciAhPSBudWxsKQogICAgICAgIHsKICAgICAgICAgICAgYXdhaXQgdGltZXIuRGlzcG9zZUFzeW5jKCk7CiAgICAgICAgICAgIHRpbWVyID0gbnVsbDsKICAgICAgICA=",
        "ZAAGAAQAAQAFAAsABwAJXmR2SiIpEx4GbFIlCh14QxRvAVZIUVEICUVWRG5QUgVDG20rR2RUBGdFWH5LOh0vL3Icc3w/BT4fFxIMezdJAW8GZG1BZHoUNhAsWTMiN3doUiV4X34jM1U/LD8iRyRJVyE+TjEsLWJ4cCMuNTUSHHctLm0eSUoY",
        "AAAMAAd9CgogICAgICAgIGZyYW1lcyA9IGF3YWl0IEpzUnVuVGltZS5JbnZva2VBc3luYzxzdHJpbmdbXT4oIk15TGliLkdldEZyYW1lcyIsIG5ldyBPYmplY3RbXSB7IG1zZywgMTIwLCAyIH0pOwoKICAgICAgICBudW0=",
        "AAAMAAhGcmFtZXMgPSBmcmFtZXMuTGVuZ3RoOwogICAgICAgIGN1ciA9IDA7CgogICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgZnJhbWVzLkxlbmd0aDsgaSsrKQogICAgICAgIHsKICAgICAgICAgICAgZnJhbWVzU3Q=",
        "AAAMAAlyICs9IGZyYW1lc1tpXSArICI8YnI+IjsKICAgICAgICB9CgogICAgICAgIHRpbWVyID0gbmV3IFN5c3RlbS5UaHJlYWRpbmcuVGltZXIoYXN5bmMgKG9iamVjdD8gc3RhdGVJbmZvKSA9PgoJCXsKICAgICAgICA=",
        "AAAMAAogICAgQ3VycmVudEZyYW1lID0gZnJhbWVzW2N1cl07CiAgICAgICAgICAgIGN1ciA9IChjdXIgKyAxKSAlIGZyYW1lcy5MZW5ndGg7CgkJCVN0YXRlSGFzQ2hhbmdlZCgpOwoJCX0sIG5ldyBTeXN0ZW0uVGhyZWE=",
        "AAAMAAtkaW5nLkF1dG9SZXNldEV2ZW50KGZhbHNlKSwgMCwgMzAwKTsKCiAgICB9Cn0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
        "AQAMAAAAAAVBNjFVyC5aWam6SoddOfemrEB1c2luZyBCbGF6b3JaWGluZ0pzCgpAaW5qZWN0IElKU1J1bnRpbWUgSnNSdW5UaW1lCgo8aDM+UVJHZW5lcmF0b3I8L2gzPgoKPGRpdiBjbGFzcz0icm93IG0tMSI+Cjx0ZXg=",
        "ZAAGAAMACAAKAAsABwAALmNjJHozBaFNVH/pkg/UfTfcg+UCH1puSXtxAi4kQkdKchEVVHdkGklRTCALcRw6czMBRwdFEkE0Jnhdc0oOMW4AWBlLEhweLTwWUBUfPBQXT2oXIF9GNVhJZjRFNmRKYHxDcBluJCVvOntFXS1sMHx6cX5ifAY9",
        "AQAMAAF0YXJlYSBAYmluZD0iQG1zZyIgc3R5bGU9ImhlaWdodDozMDBweCIgQG9uaW5wdXQ9IkAoKGUpID0+IHsgbXNnPShzdHJpbmcpZS5WYWx1ZTt9KSIgLz4KPC9kaXY+Cgo8ZGl2IGNsYXNzPSJyb3cgbS0xIj4KPGI=",
        "AQAMAAJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IiBAb25jbGljaz0iQEdlbmVyYXRlUVIiPkdlbmVyYXRlIFFSIENvZGU8L2J1dHRvbj4KPC9kaXY+Cgo8cD5Ub3RhbCBGcmFtZXM6IEBudW1GcmFtZXM8L3A+Cjw=",
        "AQAMAANRUkNvZGVXcml0ZXIgVGV4dD0iQEN1cnJlbnRGcmFtZSIgV2lkdGg9IjQwMCIgSGVpZ3RoPSI0MDAiPjwvUVJDb2RlV3JpdGVyPgoKQGZyYW1lc1N0cgoKQGNvZGUKewogICAgcHJpdmF0ZSBTdHJpbmcgbXNnID0=",
        "AQAMAAQgIiI7CiAgICBwcml2YXRlIFN0cmluZyBDdXJyZW50RnJhbWUgPSAiIjsKICAgIHByaXZhdGUgU3RyaW5nW10gZnJhbWVzOwogICAgcHJpdmF0ZSBpbnQgY3VyID0gMDsKICAgIHByaXZhdGUgU3lzdGVtLlRocmU=",
        "AQAMAAVhZGluZy5UaW1lcj8gdGltZXIgPSBudWxsOwogICAgcHJpdmF0ZSBpbnQgbnVtRnJhbWVzID0gMDsKCiAgICBwcml2YXRlIHN0cmluZyBmcmFtZXNTdHIgPSAiIjsKCiAgICBhc3luYyB2b2lkIEdlbmVyYXRlUVI=",
        "AQAMAAYoKQogICAgewogICAgICAgIGlmICh0aW1lciAhPSBudWxsKQogICAgICAgIHsKICAgICAgICAgICAgYXdhaXQgdGltZXIuRGlzcG9zZUFzeW5jKCk7CiAgICAgICAgICAgIHRpbWVyID0gbnVsbDsKICAgICAgICA=",
        "ZAAGAAcACAADAAYACwAAJmpJJBlmV6giGiuPwE6ZODeIxaNYCl5mX1IyVmFZFzgGPhg/VHdkGklRTCATDk46bjMJBFIXEko0NzAKNwMcY3sEUA8XcD0ZOTgRGHpXRmQqWCNKfh0HZjsBJ3oCcyBCaWc9EH12eiU8f2IQYjgkTjk3fwoqLkN8",
        "AQAMAAd9CgogICAgICAgIGZyYW1lcyA9IGF3YWl0IEpzUnVuVGltZS5JbnZva2VBc3luYzxzdHJpbmdbXT4oIk15TGliLkdldEZyYW1lcyIsIG5ldyBPYmplY3RbXSB7IG1zZywgMTIwLCAyIH0pOwoKICAgICAgICBudW0=",
        "AQAMAAhGcmFtZXMgPSBmcmFtZXMuTGVuZ3RoOwogICAgICAgIGN1ciA9IDA7CgogICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgZnJhbWVzLkxlbmd0aDsgaSsrKQogICAgICAgIHsKICAgICAgICAgICAgZnJhbWVzU3Q=",
        "AQAMAAlyICs9IGZyYW1lc1tpXSArICI8YnI+IjsKICAgICAgICB9CgogICAgICAgIHRpbWVyID0gbmV3IFN5c3RlbS5UaHJlYWRpbmcuVGltZXIoYXN5bmMgKG9iamVjdD8gc3RhdGVJbmZvKSA9PgoJCXsKICAgICAgICA=",
        "AQAMAAogICAgQ3VycmVudEZyYW1lID0gZnJhbWVzW2N1cl07CiAgICAgICAgICAgIGN1ciA9IChjdXIgKyAxKSAlIGZyYW1lcy5MZW5ndGg7CgkJCVN0YXRlSGFzQ2hhbmdlZCgpOwoJCX0sIG5ldyBTeXN0ZW0uVGhyZWE=",
        "AQAMAAtkaW5nLkF1dG9SZXNldEV2ZW50KGZhbHNlKSwgMCwgMzAwKTsKCiAgICB9Cn0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
    };

    private int cur = 0;
    System.Threading.Timer timer = null;

    protected override void OnInitialized()
    {
        timer = new System.Threading.Timer(async (object? stateInfo) =>
        {
            cur = (cur + 1) % mockStr.Length;
            BarcodeRead(mockStr[cur]);
        }, new System.Threading.AutoResetEvent(false), 0, 500);
    }

    private async void BarcodeRead(string code)
    {
        Object[] res = await JsRunTime.InvokeAsync<Object[]>("MyLib.ParseFrames", new Object[] { frames, code });

        if (res[0].ToString().Equals("1"))
        {
            LocalBarcodeText = res[1].ToString();
        } 
        else
        {
            frames = res[1];
            progress = await JsRunTime.InvokeAsync<double>("MyLib.GetProgress", new Object[] { frames });
            progress = Math.Floor(progress * 100);
        }
        StateHasChanged();
    }
}